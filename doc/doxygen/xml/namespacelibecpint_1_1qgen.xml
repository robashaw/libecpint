<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="namespacelibecpint_1_1qgen" kind="namespace" language="C++">
    <compoundname>libecpint::qgen</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1af1816608e31f73731cb510619099400e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::rolled_up</definition>
        <argsstring>(const int lam, const int LA, const int LB, const ThreeIndex&lt; double &gt; &amp;radials, const FiveIndex&lt; double &gt; &amp;CA, const FiveIndex&lt; double &gt; &amp;CB, const TwoIndex&lt; double &gt; &amp;SA, const TwoIndex&lt; double &gt; &amp;SB, const AngularIntegral &amp;angint, ThreeIndex&lt; double &gt; &amp;values)</argsstring>
        <name>rolled_up</name>
        <param>
          <type>int</type>
          <declname>lam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LA</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LB</declname>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
          <declname>radials</declname>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
          <declname>CA</declname>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
          <declname>CB</declname>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
          <declname>SA</declname>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
          <declname>SB</declname>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
          <declname>angints</declname>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For integral functions that have not been unrolled, this loops over the angular and radial integrals to provide the overall <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> integrals, returning in an array indexed as (shellA, shellB, mu), for mu = -lam .. lam</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lam</parametername>
</parameternamelist>
<parameterdescription>
<para>- angular momentum of <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> shell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LA</parametername>
</parameternamelist>
<parameterdescription>
<para>- angular momentum of basis shellA </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LB</parametername>
</parameternamelist>
<parameterdescription>
<para>- angular momentum of basis shellB </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radials</parametername>
</parameternamelist>
<parameterdescription>
<para>- array of radial integrals, indexed as (N, lA, lB) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CA</parametername>
</parameternamelist>
<parameterdescription>
<para>- binomial expansion coefficients of shellA </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CB</parametername>
</parameternamelist>
<parameterdescription>
<para>- binomial expansion coefficients of shellB </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SA</parametername>
</parameternamelist>
<parameterdescription>
<para>- spherical harmonics of shellA </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SB</parametername>
</parameternamelist>
<parameterdescription>
<para>- spherical harmonics of shellB </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angints</parametername>
</parameternamelist>
<parameterdescription>
<para>- object containing the angular integrals </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>- the array in which the results are returned </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/src/lib/qgen.cpp" line="32" column="6" bodyfile="/Users/robertshaw/devfiles/libecpint/src/lib/qgen.cpp" bodystart="32" bodyend="134" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ab020c384dfc8c0f23cf165448b10216e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::rolled_up_special</definition>
        <argsstring>(const int lam, const int LA, const int LB, const ThreeIndex&lt; double &gt; &amp;radials, const FiveIndex&lt; double &gt; &amp;CB, const TwoIndex&lt; double &gt; &amp;SB, const AngularIntegral &amp;angint, ThreeIndex&lt; double &gt; &amp;values)</argsstring>
        <name>rolled_up_special</name>
        <param>
          <type>int</type>
          <declname>lam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LA</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LB</declname>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
          <declname>radials</declname>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
          <declname>CB</declname>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
          <declname>SB</declname>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
          <declname>angints</declname>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>As per rolled_up, but for the special case where shell A is located on the <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> (see Shaw2017 supp. info.) per symmetry, the shell B on <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> case is the same with A and B variables reversed. <linebreak/>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lam</parametername>
</parameternamelist>
<parameterdescription>
<para>- angular momentum of <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> shell </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LA</parametername>
</parameternamelist>
<parameterdescription>
<para>- angular momentum of basis shellA </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LB</parametername>
</parameternamelist>
<parameterdescription>
<para>- angular momentum of basis shellB </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radials</parametername>
</parameternamelist>
<parameterdescription>
<para>- array of radial integrals, indexed as (N, lA, lB) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CB</parametername>
</parameternamelist>
<parameterdescription>
<para>- binomial expansion coefficients of shellB </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SB</parametername>
</parameternamelist>
<parameterdescription>
<para>- spherical harmonics of shellB </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angints</parametername>
</parameternamelist>
<parameterdescription>
<para>- object containing the angular integrals </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>- the array in which the results are returned </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/src/lib/qgen.cpp" line="136" column="6" bodyfile="/Users/robertshaw/devfiles/libecpint/src/lib/qgen.cpp" bodystart="136" bodyend="201" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="72" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ac50f25410860af3e1c8203648ed6c8ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_0_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_0_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="74" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a747ea3f093bdc2c16930a9e1573bd396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_0_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_0_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="75" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="75" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a36960c9e50c9fce6a6c57aa8792eba3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_0_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_0_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="76" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="76" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ab6099b7e4ee5c323c4ec2c6e939ae699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_0_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_0_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="77" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="77" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a02e67630bc3cc6771a283b931a0d0652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_0_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_0_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="78" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a109fc4cf994a6ef27bc8377bb1221a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_0_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_0_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="79" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="79" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a89f11f190b2770ba1a6cd3bb0e252038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_1_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_1_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="80" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a7f4b88955a96847da3ebc5c50d56e6d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_1_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_1_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="81" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ab75f9a0fe020cc5eac1855af0311a1e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_1_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_1_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="82" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a5582b3de3f3f06a0dd219525f45efb3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_1_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_1_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="83" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="83" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a3bdb99b42efd94923116ddaf39352437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_1_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_1_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="84" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="84" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a70ec2d64c8c090e8a736825df8ac69d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_1_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_1_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="85" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a01be990e258c413c9db8dd5624f0e071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_1_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_1_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="86" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="86" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a7a27208dca8f6953fd31e913e2fff149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_1_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_1_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="87" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="87" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a31e6957c9ced525cbbdba4a9c443c260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_1_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_1_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="88" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="88" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ac9d76855b9f0e07c466603e836fc55cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_1_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_1_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="89" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="89" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a5aa67d887d7014b406df808637d97331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_1_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_1_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="90" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="90" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a24a7957907649a616a90be7093af0a1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_1_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_1_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="91" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a04ddf7b46cb449284fe3577036c66685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_2_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_2_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="92" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="92" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ab6b41ee8966c9f271f301c75a167fc9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_2_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_2_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="93" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="93" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a09ff49cc3eeef8f281974772d5dffc0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_2_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_2_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="94" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="94" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a70a5cf8de05207c9704d69acbfb5c2dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_2_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_2_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="95" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="95" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a6179b5819e8e7e2f0335cfa6f36eb478" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_2_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_2_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="96" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="96" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a3be412799b3edfe3eda545484b300a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_2_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_2_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="97" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="97" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a5b65c0e188633d68627478d6dd43a613" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_2_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_2_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="98" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="98" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a23265e6ef8db8355d123e8ef88049d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_2_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_2_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="99" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ae761a79d75fd6b29c1d7460c5032a2b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_2_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_2_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="100" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="100" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a47eb555b220e5464d0533a99a06fec5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_2_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_2_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="101" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="101" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a57c8f6c91db56996a928592cd15643d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_2_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_2_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="102" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ab1fb4b6ce6020d16a6214a109b2f37d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_2_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_2_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="103" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="103" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1aba431d549c947101b9d20b8ae5cb521a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_2_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_2_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="104" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1af9a4da1d53cb16463d2d1144809f55c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_2_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_2_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="105" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="105" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ab9eaa8ccb9792d3efb90ed7143af727a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_2_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_2_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="106" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="106" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a153993173e1a3f56f30abea2b345db76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_2_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_2_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="107" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="107" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a04b44167d55d965bd4f0b5fca498a4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_2_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_2_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="108" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="108" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1abe81347b5a52f811b3bac69af1f8f9bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_2_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_2_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="109" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="109" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1acd0676a7915b0a5e72926d61e3827eae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_3_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_3_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="110" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="110" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1abdcc453ff2d05d577ea9cf4bce03402f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_3_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_3_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="111" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="111" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a832916799425771d4a829de5f488c7ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_3_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_3_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="112" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="112" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1af87f236fd427c9a80540e4117091be15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_3_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_3_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="113" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="113" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a29fd2aafe4d193454e73909dd36e4969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_3_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_3_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="114" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="114" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a1f2fae93db97564c6223f7ab0b3a1345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_3_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_3_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="115" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1af900a11994d6f09f0d83cdbc01a6cf3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_3_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_3_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="116" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="116" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a030ab3019b1098321972e7f2aa3654bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_3_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_3_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="117" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="117" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a141f8229acaf6ffcc69bbf5f25fde085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_3_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_3_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="118" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="118" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a581417956b752bd71c1a66450c2c13a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_3_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_3_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="119" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="119" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a6c9e60c9ff500fb4223a19fa56721bc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_3_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_3_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="120" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="120" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a9fad4906bd3daa6941148f903ac156df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_3_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_3_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="121" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a2f1b593fe7a6e4e2810e6b989f0e5e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_3_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_3_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="122" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="122" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a1e41f79e7d2cae760fbb9efe656d79a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_3_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_3_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="123" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="123" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ab5c03c9c7a30f526f0ea06560fef3724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_3_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_3_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="124" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a0b77eccd5538829e047ae612b66b76a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_3_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_3_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="125" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="125" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ad7b9a182da83d7b4f3db01182093b967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_3_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_3_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="126" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="126" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ac3aed6a829f009e3b82e84a90dc492c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_3_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_3_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="127" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="127" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a2b53172b5b4103d7742ccf83fdb6e5b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_3_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_3_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="128" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="128" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a15e49a02b122486b1eba9c47193a9a7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_3_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_3_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="129" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="129" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1afa1e5d62f4439f243a382d7a8cf09ce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_3_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_3_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="130" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="130" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ae94ff95331b2a7d7582d833e57e1a730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_3_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_3_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="131" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="131" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a4b956df3f1004dc6c367398fa3881724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_3_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_3_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="132" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a2d08887dbffc07eb48888c65399b1df9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_3_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_3_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="133" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="133" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a379f0d0f5d764bf07e31a8e3e8156bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_4_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_4_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="134" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="134" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a299bb6bb7a5287c2773d9f4189a26d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_4_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_4_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="135" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="135" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a6cd9cb22f70aaa25147c43511e335d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_4_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_4_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="136" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="136" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a93772fb9447d2664d73d8a3902fe1b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_4_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_4_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="137" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="137" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a99f72ea2f7322f8232307384bd228f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_4_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_4_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="138" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="138" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a8aa5fff0f4772cffde29ece307abe014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_4_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_4_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="139" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="139" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ae9a7959c4fbc71226a3cd2a7c4cd1aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_4_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_4_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="140" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="140" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a9634adfd5bb091641ec927cb13898103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_4_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_4_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="141" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="141" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a69e412cf2def6bc140846356256e9aec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_4_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_4_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="142" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="142" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a302b0e3066e69adac6e37c16bc223a36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_4_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_4_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="143" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="143" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a10cf00d4a3d89367f96e19216396af68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_4_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_4_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="144" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="144" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a0e4355fdf3c94a702625fb08123cfffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_4_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_4_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="145" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="145" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a418b910c14f22c51f09224b0b5b8897d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_4_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_4_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="146" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="146" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a6db93ab24ebed670cd2a039350906744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_4_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_4_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="147" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="147" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1aad2b22ead6cc4dd2326b1e07fbd9a0e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_4_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_4_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="148" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="148" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1adf8d2ab801d7cabb617ef95fe2346772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_4_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_4_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="149" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="149" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a08659d03f2d3c193a4a29ad64ed5b2ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_4_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_4_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="150" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="150" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a055cd957f9eeece918efd6aeac46e55b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_4_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_4_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="151" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="151" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1aa351f08e3c67aaf89372bb6458977b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_4_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_4_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="152" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="152" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a9a1b0cff031b0138fad4fba5dd78fb28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_4_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_4_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="153" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="153" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a668ee5dc9c5ceb4e2012bd86327c3f82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_4_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_4_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="154" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="154" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ac022ef72b9ce182dc98297e3046bcf35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_4_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_4_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="155" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="155" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a93d5d63f4cd6b286b87140d0c3cd84ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_4_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_4_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="156" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="156" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1aefd1940621859b33b496f59439b9a629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_4_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_4_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="157" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="157" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a29d4cca2d7ad9972c8ae888f309ef52c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q4_4_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q4_4_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="158" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="158" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a1c0f647f35ab7fd10a1a228f19df83a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q4_4_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q4_4_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="159" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="159" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a2bea2d6240c5f253e14587ab83a5d9dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q4_4_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q4_4_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="160" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="160" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a97e6fa3e95914a16d365a38fad6bf168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q4_4_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q4_4_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="161" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="161" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1aa4e13d53a459d93019650b9bf0f64a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q4_4_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q4_4_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="162" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="162" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1aea3e2f38c359b9861ebc8e6f8efc0292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q4_4_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q4_4_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="163" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="163" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a3de0194aa3913e0e14a9eedb28f9ef99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_5_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_5_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="164" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="164" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a261faecbcc2aaa80a07749ef804594d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_5_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_5_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="165" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="165" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ad83d47512070305306433992d08d692a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_5_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_5_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="166" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="166" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1afa8279cc29fea475b60c95ea30fbcf2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_5_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_5_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="167" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="167" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ab1fcb35c6f2cda3a171a75ae36f634d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_5_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_5_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="168" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="168" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a0d0c8cc09c76e3efd8f1cf130bd7264d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q0_5_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q0_5_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="169" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="169" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a029bfa957a1438d6be8340a178fa668d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_5_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_5_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="170" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="170" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a6ca3f4990879d69f0947dc320cff7512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_5_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_5_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="171" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="171" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a30db4a3e0d94645ef1061ebe49fdf79d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_5_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_5_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="172" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="172" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ab0da4c56916b9b9ef3a1e82176429161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_5_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_5_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="173" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="173" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ab76bee96421fb775cd2fd16ff036664f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_5_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_5_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="174" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="174" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a179f27d18c3e44e4d6d77a0713ffbe2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q1_5_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q1_5_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="175" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="175" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a0b468cc9891219de7934784a9c925e23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_5_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_5_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="176" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="176" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1aa01fb986261df6407432d76739134ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_5_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_5_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="177" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="177" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ab399ac3be9a089e30a15502bf58c38b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_5_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_5_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="178" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="178" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a00da41091abc4253b7f7c50816157f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_5_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_5_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="179" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="179" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a9a8592e8a00c0d7a195be80fb3bbd0ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_5_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_5_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="180" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="180" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a1ff5364df2c3ea0e40d06a096bfde511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q2_5_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q2_5_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="181" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="181" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a7a397803096c0fa76aa8db724640a33e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_5_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_5_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="182" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="182" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1af6aed704c528f33d41a3c8974f73933d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_5_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_5_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="183" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="183" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a6a80fb42ebc7edfd76662bee54b73717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_5_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_5_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="184" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="184" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a6210949d0c67ed65d2eeaea4ae8591b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_5_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_5_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="185" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="185" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a2d54034749c5ef29fa9d9902540aa1bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_5_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_5_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="186" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="186" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1afbeec27b9ba065ae00e4491b856e151a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q3_5_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q3_5_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="187" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="187" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a43fc7ab5cf543daec745b0f6d033ffc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q4_5_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q4_5_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="188" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="188" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1af5ae441ae60111ff2860513ccf26148c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q4_5_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q4_5_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="189" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="189" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a4ba269ea8b6a2e9c61df0785448a5778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q4_5_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q4_5_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="190" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="190" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a3c7bf43770a6435564e402ede936b8a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q4_5_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q4_5_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="191" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="191" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a2f3ffdd94d2b604fbffc55d77b944ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q4_5_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q4_5_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="192" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="192" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ae76853a759ec019120382cd19a0e2d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q4_5_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q4_5_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="193" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="193" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a42856d19949953db8b9963a32fec27dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q5_5_0</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q5_5_0</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="194" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="194" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a2d3f70e323ad33a72441e7bc597491c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q5_5_1</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q5_5_1</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="195" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="195" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a6e1056154af784737309be994c116ca0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q5_5_2</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q5_5_2</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="196" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="196" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1a766e3dfc45273f3b325b7b47d83c8fa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q5_5_3</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q5_5_3</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="197" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="197" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1ac6b5b1c66dc83827b0cc8971c0a89c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q5_5_4</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q5_5_4</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="198" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="198" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibecpint_1_1qgen_1aa3390aa653fcf192610379faf4cbadb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::qgen::Q5_5_5</definition>
        <argsstring>(const ECP &amp;, const GaussianShell &amp;, const GaussianShell &amp;, const FiveIndex&lt; double &gt; &amp;, const FiveIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, const TwoIndex&lt; double &gt; &amp;, double, double, const RadialIntegral &amp;, const AngularIntegral &amp;, const RadialIntegral::Parameters &amp;, ThreeIndex&lt; double &gt; &amp;)</argsstring>
        <name>Q5_5_5</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_e_c_p" kindref="compound">ECP</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_gaussian_shell" kindref="compound">GaussianShell</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_five_index" kindref="compound">FiveIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_radial_integral" kindref="compound">RadialIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classlibecpint_1_1_angular_integral" kindref="compound">AngularIntegral</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structlibecpint_1_1_radial_integral_1_1_parameters" kindref="compound">RadialIntegral::Parameters</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structlibecpint_1_1_three_index" kindref="compound">ThreeIndex</ref>&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" line="199" column="6" declfile="/Users/robertshaw/devfiles/libecpint/include/libecpint/qgen.hpp" declline="199" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/robertshaw/devfiles/libecpint/src/lib/qgen.cpp" line="31" column="1"/>
  </compounddef>
</doxygen>
